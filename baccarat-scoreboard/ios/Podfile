require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

target 'BaccaratScoreboard' do
  use_expo_modules!
  
  config_command = [
    'node',
    '--no-warnings',
    '--eval',
    'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
    'react-native-config',
    '--json',
    '--platform',
    'ios'
  ]
  
  config = use_native_modules!(config_command)

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Basic C++ settings - downgrade to C++17
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        
        # Deployment target
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.1'
        
        # Common preprocessor definitions
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << '_LIBCPP_DISABLE_AVAILABILITY=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_NO_CONFIG'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_MOBILE=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_USE_LIBCPP=1'
        
        # Special handling for all React and Folly related targets
        if target.name.include?('React') || target.name.include?('Folly') || target.name.include?('hermes')
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << '_LIBCPP_ENABLE_CXX17_REMOVED_FEATURES=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << '_LIBCPP_DISABLE_DEPRECATION_WARNINGS=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << '_LIBCPP_DISABLE_AVAILABILITY_UNSAFE_CHECKING=1'
          
          config.build_settings['OTHER_CPLUSPLUSFLAGS'] = [
            '$(inherited)',
            '-std=c++17',
            '-stdlib=libc++',
            '-DFOLLY_NO_CONFIG',
            '-DFOLLY_MOBILE=1',
            '-DFOLLY_USE_LIBCPP=1',
            '-D_LIBCPP_ENABLE_CXX17_REMOVED_FEATURES=1',
            '-D_LIBCPP_DISABLE_DEPRECATION_WARNINGS',
            '-D_LIBCPP_DISABLE_AVAILABILITY_UNSAFE_CHECKING',
            '-Wno-comma',
            '-Wno-shorten-64-to-32',
            '-Wno-documentation',
            '-Wno-nullability-completeness',
            '-Wno-deprecated-declarations',
            '-Wno-missing-field-initializers',
            '-DGLOG_NO_ABBREVIATED_SEVERITIES',
            '-DFB_SONARKIT_ENABLED=1'
          ].join(' ')
          
          # Add explicit template instantiation for char_traits
          header_content = <<-EOT
          #ifndef CHAR_TRAITS_INSTANTIATION_H
          #define CHAR_TRAITS_INSTANTIATION_H
          #include <string>
          namespace std {
            template struct char_traits<unsigned char>;
          }
          #endif
          EOT
          
          # Create a new header file in the Pods directory
          char_traits_header_path = File.join(installer.sandbox.root, 'char_traits_instantiation.h')
          File.write(char_traits_header_path, header_content)
          
          # Add the directory containing the new header to header search paths
          config.build_settings['HEADER_SEARCH_PATHS'] ||= [
            '$(inherited)',
            '"$(PODS_ROOT)"',
            '"$(PODS_ROOT)/boost"',
            '"$(PODS_ROOT)/RCT-Folly"',
            '"$(PODS_ROOT)/DoubleConversion"',
            '"$(PODS_ROOT)/Headers/Private/React-Core"',
            '"$(PODS_ROOT)/Headers/Public/React-hermes"',
            '"$(PODS_ROOT)/Headers/Public/hermes-engine"',
            '"$(PODS_ROOT)/fmt/include"'
          ].join(' ')
        end
      end
    end
  end
end
